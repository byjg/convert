<?php

namespace ByJG\Convert;

class ToUTF8
{
    /**
     * Convert a ascii html entities to UTF8
     * 
     * @param string $text
     * @return string
     */
	public static function fromHtmlEntities($text)
	{
		$HTML_ENTITIES = [
            '&iexcl;'=>[194,161]  /*¡*/, '&cent;'=>[194,162]   /*¢*/, '&pound;'=>[194,163]  /*£*/, '&curren;'=>[194,164] /*¤*/,
            '&yen;'=>[194,165]    /*¥*/, '&brvbar;'=>[194,166] /*¦*/, '&sect;'=>[194,167]   /*§*/, '&uml;'=>[194,168]    /*¨*/,
            '&copy;'=>[194,169]   /*©*/, '&ordf;'=>[194,170]   /*ª*/, '&laquo;'=>[194,171]  /*«*/, '&not;'=>[194,172]    /*¬*/,
            '&shy;'=>[194,173]    /* */, '&reg;'=>[194,174]    /*®*/, '&macr;'=>[194,175]   /*¯*/, '&deg;'=>[194,176]    /*°*/,
            '&plusmn;'=>[194,177] /*±*/, '&sup2;'=>[194,178]   /*²*/, '&sup3;'=>[194,179]   /*³*/, '&acute;'=>[194,180]  /*´*/,
            '&micro;'=>[194,181]  /*µ*/, '&para;'=>[194,182]   /*¶*/, '&middot;'=>[194,183] /*·*/, '&cedil;'=>[194,184]  /*¸*/,
            '&sup1;'=>[194,185]   /*¹*/, '&ordm;'=>[194,186]   /*º*/, '&raquo;'=>[194,187]  /*»*/, '&frac14;'=>[194,188] /*¼*/,
            '&frac12;'=>[194,189] /*½*/, '&frac34;'=>[194,190] /*¾*/, '&iquest;'=>[194,191] /*¿*/, '&Agrave;'=>[195,128] /*À*/,
            '&Aacute;'=>[195,129] /*Á*/, '&Acirc;'=>[195,130]  /*Â*/, '&Atilde;'=>[195,131] /*Ã*/, '&Auml;'=>[195,132]   /*Ä*/,
            '&Aring;'=>[195,133]  /*Å*/, '&AElig;'=>[195,134]  /*Æ*/, '&Ccedil;'=>[195,135] /*Ç*/, '&Egrave;'=>[195,136] /*È*/,
            '&Eacute;'=>[195,137] /*É*/, '&Ecirc;'=>[195,138]  /*Ê*/, '&Euml;'=>[195,139]   /*Ë*/, '&Igrave;'=>[195,140] /*Ì*/,
            '&Iacute;'=>[195,141] /*Í*/, '&Icirc;'=>[195,142]  /*Î*/, '&Iuml;'=>[195,143]   /*Ï*/, '&ETH;'=>[195,144]    /*Ð*/,
            '&Ntilde;'=>[195,145] /*Ñ*/, '&Ograve;'=>[195,146] /*Ò*/, '&Oacute;'=>[195,147] /*Ó*/, '&Ocirc;'=>[195,148]  /*Ô*/,
            '&Otilde;'=>[195,149] /*Õ*/, '&Ouml;'=>[195,150]   /*Ö*/, '&times;'=>[195,151]  /*×*/, '&Oslash;'=>[195,152] /*Ø*/,
            '&Ugrave;'=>[195,153] /*Ù*/, '&Uacute;'=>[195,154] /*Ú*/, '&Ucirc;'=>[195,155]  /*Û*/, '&Uuml;'=>[195,156]   /*Ü*/,
            '&Yacute;'=>[195,157] /*Ý*/, '&THORN;'=>[195,158]  /*Þ*/, '&szlig;'=>[195,159]  /*ß*/, '&agrave;'=>[195,160] /*à*/,
            '&aacute;'=>[195,161] /*á*/, '&acirc;'=>[195,162]  /*â*/, '&atilde;'=>[195,163] /*ã*/, '&auml;'=>[195,164]   /*ä*/,
            '&aring;'=>[195,165]  /*å*/, '&aelig;'=>[195,166]  /*æ*/, '&ccedil;'=>[195,167] /*ç*/, '&egrave;'=>[195,168] /*è*/,
            '&eacute;'=>[195,169] /*é*/, '&ecirc;'=>[195,170]  /*ê*/, '&euml;'=>[195,171]   /*ë*/, '&igrave;'=>[195,172] /*ì*/,
            '&iacute;'=>[195,173] /*í*/, '&icirc;'=>[195,174]  /*î*/, '&iuml;'=>[195,175]   /*ï*/, '&eth;'=>[195,176]    /*ð*/,
            '&ntilde;'=>[195,177] /*ñ*/, '&ograve;'=>[195,178] /*ò*/, '&oacute;'=>[195,179] /*ó*/, '&ocirc;'=>[195,180]  /*ô*/,
            '&otilde;'=>[195,181] /*õ*/, '&ouml;'=>[195,182]   /*ö*/, '&divide;'=>[195,183] /*÷*/, '&oslash;'=>[195,184] /*ø*/,
            '&ugrave;'=>[195,185] /*ù*/, '&uacute;'=>[195,186] /*ú*/, '&ucirc;'=>[195,187]  /*û*/, '&uuml;'=>[195,188]   /*ü*/,
            '&yacute;'=>[195,189] /*ý*/, '&thorn;'=>[195,190]  /*þ*/, '&yuml;'=>[195,191]   /*ÿ*/, '&utilde;'=>[197,169] /*ũ*/,
            '&Utilde;'=>[197,168] /*Ũ*/,

        ];

		return ToUTF8::baseConversion($HTML_ENTITIES, $text);
	}


	/**
	 * Base convert based on array
	 *
	 * @param string[] $vector
	 * @param string $text
	 * @return string
	 */
	protected static function baseConversion($vector, $text)
	{
		foreach ($vector as $key=>$value)
		{
			$text = str_replace($key, chr($value[0]).chr($value[1]), $text);
		}

		return $text;
	}

}
